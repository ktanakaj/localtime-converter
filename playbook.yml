---
- hosts: default
  vars:
    timezone: "Asia/Tokyo"
    nodesource: https://rpm.nodesource.com/setup_6.x
    vagrant_dir: /vagrant
    app_nginx_conf_src: "{{ vagrant_dir }}/nginx-app.conf"
    app_nginx_conf_dest: /etc/nginx/default.d/localtime-converter.conf
    app_dir: "{{ vagrant_dir }}/localtime-converter"
    build_target: build
  tasks:
    - block:
      - block:
        - name: Check timezone
          shell: timedatectl | grep -e {{ timezone }}
          register: timedatectl_timezone
          check_mode: no
          changed_when: false
          failed_when: false
        - name: Set timezone
          shell: timedatectl set-timezone {{ timezone }}
          when: timedatectl_timezone.stdout == ""
      - block:
        - name: Check Node.js repository version
          shell: yum info nodejs | grep -e "Version\s*:\s*[6-9].*$"
          register: nodejs_repository_version
          check_mode: no
          changed_when: false
          failed_when: false
        - name: Register Node.js repository
          shell: curl --silent --location {{ nodesource }} | bash -
          when: nodejs_repository_version.stdout == ""
        - name: Upgrade all packages
          yum: name=* state=latest
        - name: Install the latest version of Node.js
          yum: name=nodejs state=latest
        - name: Install the latest version of nginx
          yum: name=nginx state=latest
        - name: Install the latest version of git
          yum: name=git state=latest
      - block:
        - name: Install "jsdoc" node.js package globally
          npm: name=jsdoc global=yes
        - name: Install "eslint" node.js package globally
          npm: name=eslint global=yes
        - name: Install "mocha" node.js package globally
          npm: name=mocha global=yes
        - name: Install "babel" node.js package globally
          npm: name=babel global=yes
        - name: Install "browserify" node.js package globally
          npm: name=browserify global=yes
        - name: Install "watchify" node.js package globally
          npm: name=watchify global=yes
      - block:
        - name: Action to disable service firewalld
          service: name=firewalld state=stopped enabled=no
        - name: Copy the web app configuration to nginx
          copy: src={{ app_nginx_conf_src }} dest={{ app_nginx_conf_dest }} force=no
        - name: Action to enable service nginx
          service: name=nginx state=restarted enabled=yes
        - name: Action to disable SELinux for nginx
          selinux: state=permissive policy=targeted
      become: true

    - block:
      - block:
        - name: Install node.js package for the web application
          npm: path={{ app_dir }} executable="npm --no-bin-links"
        - name: Build the web application
          shell: npm run {{ build_target }} chdir={{ app_dir }}
